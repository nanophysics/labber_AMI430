# Instrument driver configuration file.

[General settings]
# The name is shown in all the configuration windows
name: AMI430

# The version string should be updated whenever changes are made to this config file

version: 0.0.9

# Name of folder containing the code defining a custom driver. Do not define this item
# or leave it blank for any standard driver based on the built-in VISA interface.
driver_path: AMI430_driver

signal_generator: True

interface: Other

[Model and options]
# The option section allow instruments with different options to use the same driver

# List of models supported by this driver
model_str_1: Hardware
model_str_2: Simulation

# General VISA settings for the instrument.
[VISA settings]

# Enable or disable communication over the VISA protocol (True or False)
# If False, the driver will not perform any operations (unless there is a custom driver).
use_visa: False

# Define quantities in sections. This list is a selection of allowed keywords,
# see the manual for a full list of options
#   datatype:      The datatype should be one of DOUBLE, BOOLEAN, COMBO,
#                  STRING, COMPLEX, VECTOR, VECTOR_COMPLEX, PATH or BUTTON.
#   unit:          Quantity unit
#   set_cmd:       Command used to send data to the instrument. Put <*> where the value should appear.
#   get_cmd:       Command used to get the data from the instrument. Default is set_cmd?
#   def_value:     Default value
#   low_lim:       Lowest allowable value.  Defaults to -INF
#   high_lim:      Highest allowable values.  Defaults to +INF
#   combo_def_1:   First option in a pull-down combo box. Only used when datatype=COMBO
#   combo_def_2:   Second option in a pull-down combo box. Only used when datatype=COMBO
#   ...
#   combo_def_n:   nth option in a pull-down combo box. Only used when datatype=COMBO
#   state_quant:   Quantity that determines this control's visibility
#   state_value_1: Value of "state_quant" for which the control is visible
#   state_value_2: Value of "state_quant" for which the control is visible
#   ...
#   state_value_n: Value of "state_quant" for which the control is visible
#   permission:    Sets read/writability, options are BOTH, READ, WRITE or NONE. Default is BOTH 
#   group:         Name of the group where the control belongs.
#   section:       Name of the section where the control belongs.

[Config / Name]
datatype: STRING
def_value: ?
permission: READ

[Config / Axis]
datatype: COMBO
def_value: AXIS2
combo_def_1: AXIS2
combo_def_2: AXIS3
permission: READ

[Control / Logging]
datatype: COMBO
def_value: DEBUG
combo_def_1: DEBUG
combo_def_2: INFO
combo_def_3: WARNING

; [Control / Ramp Mode]
; datatype: COMBO
; def_value: simultaneous
; combo_def_1: default
; combo_def_2: simultaneous

[Control / Field Setpoint X]
datatype: DOUBLE
unit: T
def_value: 0.0
x_name: Magnetic field
x_unit: T

[Control / Field Setpoint Y]
datatype: DOUBLE
unit: T
def_value: 0.0
x_name: Magnetic field
x_unit: T

[Control / Field Setpoint Z]
datatype: DOUBLE
unit: T
def_value: 0.0
x_name: Magnetic field
x_unit: T
state_quant: Config / Axis
state_value_1:AXIS3

[Control / Ramp Rate X]
datatype: DOUBLE
unit: T / s
def_value: 0.01

[Control / Ramp Rate Y]
datatype: DOUBLE
unit: T / s
def_value: 0.01

[Control / Ramp Rate Z]
datatype: DOUBLE
unit: T / s
def_value: 0.01
state_quant: Config / Axis
state_value_1:AXIS3

[Status / Field actual X]
datatype: DOUBLE
unit: T
def_value: 0.0
permission: READ

[Status / Field actual Y]
datatype: DOUBLE
unit: T
def_value: 0.0
permission: READ

[Status / Field actual Z]
datatype: DOUBLE
unit: T
def_value: 0.0
permission: READ
state_quant: Config / Axis
state_value_1:AXIS3

[Status / Ramping state]
datatype: COMBO
def_value: holding
combo_def_1: ramping
combo_def_2: holding
combo_def_3: paused
combo_def_4: manual up
combo_def_5: manual down
combo_def_6: zeroing current
combo_def_7: quench detected
combo_def_8: at zero current
combo_def_9: heating switch
combo_def_10: cooling switch
permission: READ

[Status / Error Message]
datatype: STRING
def_value: ?
permission: READ
