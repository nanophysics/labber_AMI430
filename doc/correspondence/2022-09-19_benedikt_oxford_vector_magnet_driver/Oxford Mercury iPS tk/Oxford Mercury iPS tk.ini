# Instrument driver configuration file.

[General settings]

# The name is shown in all the configuration windows
name: Oxford Mercury iPS tk

# The version string should be updated whenever changes are made to this config file
version: 1.0

# Name of folder containing the code defining a custom driver. Do not define this item
# or leave it blank for any standard driver based on the built-in VISA interface.
driver_path: Oxford Mercury iPS tk

[Model and options]
check_model: false
check_option: false
option_str_1: Bx magnet
option_str_2: By magnet
option_str_3: Bz magnet
option_str_4: Bx switch heater
option_str_5: By switch heater
option_str_6: Bz switch heater

model_str_1: OXFORD INSTRUMENTS:MERCURY iPS

# General VISA settings for the instrument.
[VISA settings]

# Enable or disable communication over the VISA protocol (True or False)
# If False, the driver will not perform any operations (unless there is a custom driver).
use_visa = True

# Reset the interface (not the instrument) at startup (True or False).  Default is False
reset: False

# Time (in seconds) before the timing out while waiting for an instrument response. Default is 5
timeout: 5
suppress_end_on_read: False

# Query instrument errors (True or False).  If True, every command sent to the device will
# be followed by an error query.  This is useful when testing new setups, but may degrade
# performance by slowing down the instrument communication. 
query_instr_errors: False 

# Bit mask for checking status byte errors (default is 255, include all errors)
# The bits signal the following errors:
# 0: Operation
# 1: Request control
# 2: Query error
# 3: Device error
# 4: Execution error
# 5: Command error
# 6: User request
# 7: Power on
error_bit_mask: 255

# SCPI string to be used when querying for instrument error messages
error_cmd: 

# Initialization commands are sent to the instrument when starting the driver
# *RST will reset the device, *CLS clears the interface
init:

# Boolean string values (used for sending True/False to instrument), default is 1 and 0
str_true: ON
str_false: OFF

# Final commands sent to the instrument when closing the driver
final: 


# Define quantities in sections. The section name should be the same as the "name" value
# The following keywords are allowed:
#   name:          Quantity name
#   unit:          Quantity unit
#   enabled:	   Determines wether the control is enabled from start.  Default is True	
#   datatype:      The data type should be one of DOUBLE, BOOLEAN, COMBO, STRING, PATH or BUTTON
#   def_value:     Default value
#   low_lim:       Lowest allowable value.  Defaults to -INF
#   high_lim:      Highest allowable values.  Defaults to +INF
#   combo_def_1:   First option in a pull-down combo box. Only used when datatype=COMBO
#   combo_def_2:   Second option in a pull-down combo box. Only used when datatype=COMBO
#   ...
#   combo_def_n:   nth option in a pull-down combo box. Only used when datatype=COMBO
#   group:         Name of the group where the control belongs.
#   state_quant:   Quantity that determines this control's visibility
#   state_value_1: Value of "state_quant" for which the control is visible
#   state_value_2: Value of "state_quant" for which the control is visible
#   ...
#   state_value_n: Value of "state_quant" for which the control is visible
#   permission:    Sets read/writability, options are BOTH, READ, WRITE or NONE. Default is BOTH 
#   set_cmd:       Command used to send data to the instrument. Put <*> where the value should appear.
#   sweep_cmd:     Command used to sweep data. Use <s> for sweep rate, and <*> for the value.
#   get_cmd:       Command used to get the data from the instrument. Default is set_cmd?


[Bx]
datatype: DOUBLE
unit: T
get_cmd: READ:DEV:GRPX:PSU:SIG:FSET
set_cmd: SET:DEV:GRPX:PSU:SIG:FSET
option_value_1: Bx magnet

[BxRate]
datatype: DOUBLE
unit: T/min
get_cmd: READ:DEV:GRPX:PSU:SIG:RFST
set_cmd: SET:DEV:GRPX:PSU:SIG:RFST
option_value_1: Bx magnet

[BxSwitchHeater]
label: Switch Heater Bx
datatype: BOOLEAN
get_cmd: READ:DEV:GRPX:PSU:SIG:SWHT
set_cmd: SET:DEV:GRPX:PSU:SIG:SWHT
option_value_1: Bx switch heater

[By]
datatype: DOUBLE
unit: T
get_cmd: READ:DEV:GRPY:PSU:SIG:FSET
set_cmd: SET:DEV:GRPY:PSU:SIG:FSET
option_value_1: By magnet

[ByRate]
datatype: DOUBLE
unit: T/min
get_cmd: READ:DEV:GRPY:PSU:SIG:RFST
set_cmd: SET:DEV:GRPY:PSU:SIG:RFST
option_value_1: By magnet

[BySwitchHeater]
label: Switch Heater By
datatype: BOOLEAN
get_cmd: READ:DEV:GRPY:PSU:SIG:SWHT
set_cmd: SET:DEV:GRPY:PSU:SIG:SWHT
option_value_1: By switch heater

[Bz]
datatype: DOUBLE
unit: T
get_cmd: READ:DEV:GRPZ:PSU:SIG:FSET
set_cmd: SET:DEV:GRPZ:PSU:SIG:FSET
option_value_1: Bz magnet

[BzRate]
datatype: DOUBLE
unit: T/min
get_cmd: READ:DEV:GRPZ:PSU:SIG:RFST
set_cmd: SET:DEV:GRPZ:PSU:SIG:RFST
option_value_1: Bz magnet

[BzSwitchHeater]
label: Switch Heater Bz
datatype: BOOLEAN
get_cmd: READ:DEV:GRPZ:PSU:SIG:SWHT
set_cmd: SET:DEV:GRPZ:PSU:SIG:SWHT
option_value_1: Bz switch heater

[SwitchHeaterDelay]
label: switch heater delay (DANGEROUS!)
tooltip: Wait time after setting the switch heater. Do not lower unless you know what you are doing!
datatype: DOUBLE
def_value: 30
unit: s
option_value_1: Bx switch heater
option_value_2: By switch heater
option_value_3: Bz switch heater